<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Dirección</value>
    <comment>Dirección</comment>
  </data>
  <data name="AllowedValuesAttribute_Invalid" xml:space="preserve">
    <value>The {0} field does not equal any of the values specified in AllowedValuesAttribute.</value>
    <comment>The {0} field does not equal any of the values specified in AllowedValuesAttribute.</comment>
  </data>
  <data name="AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties" xml:space="preserve">
    <value>The associated metadata type for type '{0}' contains the following unknown properties or fields: {1}. Please make sure that the names of these members match the names of the properties on the main type.</value>
    <comment>The associated metadata type for type '{0}' contains the following unknown properties or fields: {1}. Please make sure that the names of these members match the names of the properties on the main type.</comment>
  </data>
  <data name="AttributeStore_Unknown_Property" xml:space="preserve">
    <value>The type '{0}' does not contain a public property named '{1}'.</value>
    <comment>The type '{0}' does not contain a public property named '{1}'.</comment>
  </data>
  <data name="Base64StringAttribute_Invalid" xml:space="preserve">
    <value>The {0} field is not a valid Base64 encoding.</value>
    <comment>The {0} field is not a valid Base64 encoding.</comment>
  </data>
  <data name="BussinessAddress" xml:space="preserve">
    <value>Dirección del Negocio</value>
    <comment>Dirección del Negocio</comment>
  </data>
  <data name="BussinessType" xml:space="preserve">
    <value>Tipo de Negocio</value>
    <comment>Tipo de Negocio</comment>
  </data>
  <data name="Common_PropertyNotFound" xml:space="preserve">
    <value>The property {0}.{1} could not be found.</value>
    <comment>The property {0}.{1} could not be found.</comment>
  </data>
  <data name="CompareAttribute_MustMatch" xml:space="preserve">
    <value>'{0}' and '{1}' do not match.</value>
    <comment>'{0}' and '{1}' do not match.</comment>
  </data>
  <data name="CompareAttribute_UnknownProperty" xml:space="preserve">
    <value>Could not find a property named {0}.</value>
    <comment>Could not find a property named {0}.</comment>
  </data>
  <data name="CreditCardAttribute_Invalid" xml:space="preserve">
    <value>The {0} field is not a valid credit card number.</value>
    <comment>The {0} field is not a valid credit card number.</comment>
  </data>
  <data name="CustomValidationAttribute_Method_Must_Return_ValidationResult" xml:space="preserve">
    <value>The CustomValidationAttribute method '{0}' in type '{1}' must return System.ComponentModel.DataAnnotations.ValidationResult.  Use System.ComponentModel.DataAnnotations.ValidationResult.Success to represent success.</value>
    <comment>The CustomValidationAttribute method '{0}' in type '{1}' must return System.ComponentModel.DataAnnotations.ValidationResult.  Use System.ComponentModel.DataAnnotations.ValidationResult.Success to represent success.</comment>
  </data>
  <data name="CustomValidationAttribute_Method_Not_Found" xml:space="preserve">
    <value>The CustomValidationAttribute method '{0}' does not exist in type '{1}' or is not public and static.</value>
    <comment>The CustomValidationAttribute method '{0}' does not exist in type '{1}' or is not public and static.</comment>
  </data>
  <data name="CustomValidationAttribute_Method_Required" xml:space="preserve">
    <value>The CustomValidationAttribute.Method was not specified.</value>
    <comment>The CustomValidationAttribute.Method was not specified.</comment>
  </data>
  <data name="CustomValidationAttribute_Method_Signature" xml:space="preserve">
    <value>The CustomValidationAttribute method '{0}' in type '{1}' must match the expected signature: public static ValidationResult {0}(object value, ValidationContext context).  The value can be strongly typed.  The ValidationContext parameter is optional.</value>
    <comment>The CustomValidationAttribute method '{0}' in type '{1}' must match the expected signature: public static ValidationResult {0}(object value, ValidationContext context).  The value can be strongly typed.  The ValidationContext parameter is optional.</comment>
  </data>
  <data name="CustomValidationAttribute_Type_Conversion_Failed" xml:space="preserve">
    <value>Could not convert the value of type '{0}' to '{1}' as expected by method {2}.{3}.</value>
    <comment>Could not convert the value of type '{0}' to '{1}' as expected by method {2}.{3}.</comment>
  </data>
  <data name="CustomValidationAttribute_Type_Must_Be_Public" xml:space="preserve">
    <value>The custom validation type '{0}' must be public.</value>
    <comment>The custom validation type '{0}' must be public.</comment>
  </data>
  <data name="CustomValidationAttribute_ValidationError" xml:space="preserve">
    <value>{0} is not valid.</value>
    <comment>{0} is not valid.</comment>
  </data>
  <data name="CustomValidationAttribute_ValidatorType_Required" xml:space="preserve">
    <value>The CustomValidationAttribute.ValidatorType was not specified.</value>
    <comment>The CustomValidationAttribute.ValidatorType was not specified.</comment>
  </data>
  <data name="DataTypeAttribute_EmptyDataTypeString" xml:space="preserve">
    <value>The custom DataType string cannot be null or empty.</value>
    <comment>The custom DataType string cannot be null or empty.</comment>
  </data>
  <data name="DeniedValuesAttribute_Invalid" xml:space="preserve">
    <value>The {0} field equals one of the values specified in DeniedValuesAttribute.</value>
    <comment>The {0} field equals one of the values specified in DeniedValuesAttribute.</comment>
  </data>
  <data name="DisplayAttribute_PropertyNotSet" xml:space="preserve">
    <value>The {0} property has not been set.  Use the {1} method to get the value.</value>
    <comment>The {0} property has not been set.  Use the {1} method to get the value.</comment>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Correo</value>
    <comment>Correo</comment>
  </data>
  <data name="EmailAddressAttribute_Invalid" xml:space="preserve">
    <value>The {0} field is not a valid e-mail address.</value>
    <comment>The {0} field is not a valid e-mail address.</comment>
  </data>
  <data name="EmailAddressValidationError" xml:space="preserve">
    <value>El campo '{0}' no es una dirección de correo electrónico válida.</value>
    <comment>El campo '{0}' no es una dirección de correo electrónico válida.</comment>
  </data>
  <data name="EnumDataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>The type provided for EnumDataTypeAttribute cannot be null.</value>
    <comment>The type provided for EnumDataTypeAttribute cannot be null.</comment>
  </data>
  <data name="EnumDataTypeAttribute_TypeNeedsToBeAnEnum" xml:space="preserve">
    <value>The type '{0}' needs to represent an enumeration type.</value>
    <comment>The type '{0}' needs to represent an enumeration type.</comment>
  </data>
  <data name="FileExtensionsAttribute_Invalid" xml:space="preserve">
    <value>The {0} field only accepts files with the following extensions: {1}</value>
    <comment>The {0} field only accepts files with the following extensions: {1}</comment>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Género</value>
    <comment>Género</comment>
  </data>
  <data name="GenericValidationError" xml:space="preserve">
    <value>El campo '{0}' no tiene un valor válido.</value>
    <comment>El campo '{0}' no tiene un valor válido.</comment>
  </data>
  <data name="Guarantors" xml:space="preserve">
    <value>Fiadores</value>
    <comment>Fiadores</comment>
  </data>
  <data name="Identification" xml:space="preserve">
    <value>Cédula</value>
    <comment>Cédula</comment>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Apellidos</value>
    <comment>Apellidos</comment>
  </data>
  <data name="LengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>LengthAttribute must have a MaximumLength value that is greater than or equal to MinimumLength.</value>
    <comment>LengthAttribute must have a MaximumLength value that is greater than or equal to MinimumLength.</comment>
  </data>
  <data name="LengthAttribute_InvalidMinLength" xml:space="preserve">
    <value>LengthAttribute must have a MinimumLength value that is zero or greater.</value>
    <comment>LengthAttribute must have a MinimumLength value that is zero or greater.</comment>
  </data>
  <data name="LengthAttribute_InvalidValueType" xml:space="preserve">
    <value>The field of type {0} must be a string, array or ICollection type.</value>
    <comment>The field of type {0} must be a string, array or ICollection type.</comment>
  </data>
  <data name="LengthAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be a string or collection type with a minimum length of '{1}' and maximum length of '{2}'.</value>
    <comment>The field {0} must be a string or collection type with a minimum length of '{1}' and maximum length of '{2}'.</comment>
  </data>
  <data name="LocalizableString_LocalizationFailed" xml:space="preserve">
    <value>Cannot retrieve property '{0}' because localization failed.  Type '{1}' is not public or does not contain a public static string property with the name '{2}'.</value>
    <comment>Cannot retrieve property '{0}' because localization failed.  Type '{1}' is not public or does not contain a public static string property with the name '{2}'.</comment>
  </data>
  <data name="MaxLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length.</value>
    <comment>MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length.</comment>
  </data>
  <data name="MaxLengthAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be a string or array type with a maximum length of '{1}'.</value>
    <comment>The field {0} must be a string or array type with a maximum length of '{1}'.</comment>
  </data>
  <data name="MaxLengthValidationError" xml:space="preserve">
    <value>El campo '{0}' debe tener una longitud máxima de '{1}'.</value>
    <comment>El campo '{0}' debe tener una longitud máxima de '{1}'.</comment>
  </data>
  <data name="MetadataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>MetadataClassType cannot be null.</value>
    <comment>MetadataClassType cannot be null.</comment>
  </data>
  <data name="MinLengthAttribute_InvalidMinLength" xml:space="preserve">
    <value>MinLengthAttribute must have a Length value that is zero or greater.</value>
    <comment>MinLengthAttribute must have a Length value that is zero or greater.</comment>
  </data>
  <data name="MinLengthAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be a string or array type with a minimum length of '{1}'.</value>
    <comment>The field {0} must be a string or array type with a minimum length of '{1}'.</comment>
  </data>
  <data name="MinLengthValidationError" xml:space="preserve">
    <value>El campo '{0}' debe tener una longitud mínima de '{1}'.</value>
    <comment>El campo '{0}' debe tener una longitud mínima de '{1}'.</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombres</value>
    <comment>Nombres</comment>
  </data>
  <data name="Neighborhood" xml:space="preserve">
    <value>Barrio</value>
    <comment>Barrio</comment>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Teléfono</value>
    <comment>Teléfono</comment>
  </data>
  <data name="PhoneAttribute_Invalid" xml:space="preserve">
    <value>The {0} field is not a valid phone number.</value>
    <comment>The {0} field is not a valid phone number.</comment>
  </data>
  <data name="PhoneValidationError" xml:space="preserve">
    <value>El campo '{0}' no es un número de teléfono válido.</value>
    <comment>El campo '{0}' no es un número de teléfono válido.</comment>
  </data>
  <data name="RangeAttribute_ArbitraryTypeNotIComparable" xml:space="preserve">
    <value>The type {0} must implement {1}.</value>
    <comment>The type {0} must implement {1}.</comment>
  </data>
  <data name="RangeAttribute_CannotUseExclusiveBoundsWhenTheyAreEqual" xml:space="preserve">
    <value>Cannot use exclusive bounds when the maximum value is equal to the minimum value.</value>
    <comment>Cannot use exclusive bounds when the maximum value is equal to the minimum value.</comment>
  </data>
  <data name="RangeAttribute_MinGreaterThanMax" xml:space="preserve">
    <value>The maximum value '{0}' must be greater than or equal to the minimum value '{1}'.</value>
    <comment>The maximum value '{0}' must be greater than or equal to the minimum value '{1}'.</comment>
  </data>
  <data name="RangeAttribute_Must_Set_Min_And_Max" xml:space="preserve">
    <value>The minimum and maximum values must be set.</value>
    <comment>The minimum and maximum values must be set.</comment>
  </data>
  <data name="RangeAttribute_Must_Set_Operand_Type" xml:space="preserve">
    <value>The OperandType must be set when strings are used for minimum and maximum values.</value>
    <comment>The OperandType must be set when strings are used for minimum and maximum values.</comment>
  </data>
  <data name="RangeAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be between {1} and {2}.</value>
    <comment>The field {0} must be between {1} and {2}.</comment>
  </data>
  <data name="RangeAttribute_ValidationError_MaxExclusive" xml:space="preserve">
    <value>The field {0} must be between {1} and {2} exclusive.</value>
    <comment>The field {0} must be between {1} and {2} exclusive.</comment>
  </data>
  <data name="RangeAttribute_ValidationError_MinExclusive" xml:space="preserve">
    <value>The field {0} must be between {1} exclusive and {2}.</value>
    <comment>The field {0} must be between {1} exclusive and {2}.</comment>
  </data>
  <data name="RangeAttribute_ValidationError_MinExclusive_MaxExclusive" xml:space="preserve">
    <value>The field {0} must be between {1} exclusive and {2} exclusive.</value>
    <comment>The field {0} must be between {1} exclusive and {2} exclusive.</comment>
  </data>
  <data name="References" xml:space="preserve">
    <value>Referencias</value>
    <comment>Referencias</comment>
  </data>
  <data name="RegexAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must match the regular expression '{1}'.</value>
    <comment>The field {0} must match the regular expression '{1}'.</comment>
  </data>
  <data name="RegexValidationError" xml:space="preserve">
    <value>El campo {0} debe coincidir con la expresión regular '{1}'.</value>
    <comment>El campo {0} debe coincidir con la expresión regular '{1}'.</comment>
  </data>
  <data name="RegularExpressionAttribute_Empty_Pattern" xml:space="preserve">
    <value>The pattern must be set to a valid regular expression.</value>
    <comment>The pattern must be set to a valid regular expression.</comment>
  </data>
  <data name="Relationship" xml:space="preserve">
    <value>Parentesco</value>
    <comment>Parentesco</comment>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>The {0} field is required.</value>
    <comment>The {0} field is required.</comment>
  </data>
  <data name="RequiredValidationError" xml:space="preserve">
    <value>El campo '{0}' es requerido.</value>
    <comment>El campo '{0}' es requerido.</comment>
  </data>
  <data name="StringLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>The maximum length must be a nonnegative integer.</value>
    <comment>The maximum length must be a nonnegative integer.</comment>
  </data>
  <data name="StringLengthAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be a string with a maximum length of {1}.</value>
    <comment>The field {0} must be a string with a maximum length of {1}.</comment>
  </data>
  <data name="StringLengthAttribute_ValidationErrorIncludingMinimum" xml:space="preserve">
    <value>The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.</value>
    <comment>The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.</comment>
  </data>
  <data name="TranslateKeyNotFound" xml:space="preserve">
    <value>Key '{0}' was not found in resources '{1}' for culture '{2}'.</value>
    <comment>Key '{0}' was not found in resources '{1}' for culture '{2}'.</comment>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNotAString" xml:space="preserve">
    <value>The key parameter at position {0} with value '{1}' is not a string. Every key control parameter must be a string.</value>
    <comment>The key parameter at position {0} with value '{1}' is not a string. Every key control parameter must be a string.</comment>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNull" xml:space="preserve">
    <value>The key parameter at position {0} is null. Every key control parameter must be a string.</value>
    <comment>The key parameter at position {0} is null. Every key control parameter must be a string.</comment>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyOccursMoreThanOnce" xml:space="preserve">
    <value>The key parameter at position {0} with value '{1}' occurs more than once.</value>
    <comment>The key parameter at position {0} with value '{1}' occurs more than once.</comment>
  </data>
  <data name="UIHintImplementation_NeedEvenNumberOfControlParameters" xml:space="preserve">
    <value>The number of control parameters must be even.</value>
    <comment>The number of control parameters must be even.</comment>
  </data>
  <data name="UrlAttribute_Invalid" xml:space="preserve">
    <value>The {0} field is not a valid fully-qualified http, https, or ftp URL.</value>
    <comment>The {0} field is not a valid fully-qualified http, https, or ftp URL.</comment>
  </data>
  <data name="ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource" xml:space="preserve">
    <value>Either ErrorMessageString or ErrorMessageResourceName must be set, but not both.</value>
    <comment>Either ErrorMessageString or ErrorMessageResourceName must be set, but not both.</comment>
  </data>
  <data name="ValidationAttribute_IsValid_NotImplemented" xml:space="preserve">
    <value>IsValid(object value) has not been implemented by this class.  The preferred entry point is GetValidationResult() and classes should override IsValid(object value, ValidationContext context).</value>
    <comment>IsValid(object value) has not been implemented by this class.  The preferred entry point is GetValidationResult() and classes should override IsValid(object value, ValidationContext context).</comment>
  </data>
  <data name="ValidationAttribute_NeedBothResourceTypeAndResourceName" xml:space="preserve">
    <value>Both ErrorMessageResourceType and ErrorMessageResourceName need to be set on this attribute.</value>
    <comment>Both ErrorMessageResourceType and ErrorMessageResourceName need to be set on this attribute.</comment>
  </data>
  <data name="ValidationAttribute_ResourcePropertyNotStringType" xml:space="preserve">
    <value>The property '{0}' on resource type '{1}' is not a string type.</value>
    <comment>The property '{0}' on resource type '{1}' is not a string type.</comment>
  </data>
  <data name="ValidationAttribute_ResourceTypeDoesNotHaveProperty" xml:space="preserve">
    <value>The resource type '{0}' does not have an accessible static property named '{1}'.</value>
    <comment>The resource type '{0}' does not have an accessible static property named '{1}'.</comment>
  </data>
  <data name="ValidationAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} is invalid.</value>
    <comment>The field {0} is invalid.</comment>
  </data>
  <data name="Validator_InstanceMustMatchValidationContextInstance" xml:space="preserve">
    <value>The instance provided must match the ObjectInstance on the ValidationContext supplied.</value>
    <comment>The instance provided must match the ObjectInstance on the ValidationContext supplied.</comment>
  </data>
  <data name="Validator_Property_Value_Wrong_Type" xml:space="preserve">
    <value>The value for property '{0}' must be of type '{1}'.</value>
    <comment>The value for property '{0}' must be of type '{1}'.</comment>
  </data>
  <data name="View_ButtonNext" xml:space="preserve">
    <value>Next</value>
    <comment>It's a message for a button</comment>
  </data>
  <data name="View_ButtonOmit" xml:space="preserve">
    <value>Skip</value>
    <comment>It's a message for a button</comment>
  </data>
  <data name="View_Cancel_Message" xml:space="preserve">
    <value>Cancel</value>
    <comment>It's a cancel message</comment>
  </data>
  <data name="View_CatalogsName" xml:space="preserve">
    <value>Catalogs</value>
    <comment>It's the name for catalogs page</comment>
  </data>
  <data name="View_Confirm_Message" xml:space="preserve">
    <value>Confirm</value>
    <comment>It's a confirm message</comment>
  </data>
  <data name="View_Delete_Alert" xml:space="preserve">
    <value>Are you sure to delete it?</value>
    <comment>It's a alert message for delete a item</comment>
  </data>
  <data name="View_Delete_Message" xml:space="preserve">
    <value>Delete</value>
    <comment>It's a message for delete</comment>
  </data>
  <data name="View_Enter_Name" xml:space="preserve">
    <value>Enter a name</value>
    <comment>It's a message for enter a new name</comment>
  </data>
  <data name="View_Insert_Message" xml:space="preserve">
    <value>Enter the name</value>
    <comment>It's a message for the insert</comment>
  </data>
  <data name="View_Label_Id" xml:space="preserve">
    <value>ID</value>
    <comment>It's a message for identificators label</comment>
  </data>
  <data name="View_Label_Name" xml:space="preserve">
    <value>Name</value>
    <comment>It's a message for Names label</comment>
  </data>
  <data name="View_LoanTypesCrud_Delete" xml:space="preserve">
    <value>Delete a Loan Type</value>
    <comment>It's a message for Delete button</comment>
  </data>
  <data name="View_LoanTypesCrud_Fetch" xml:space="preserve">
    <value>Fetch Loan Type</value>
    <comment>It's a message for fetch button</comment>
  </data>
  <data name="View_LoanTypesCrud_Update" xml:space="preserve">
    <value>Update a Loan Type</value>
    <comment>It's a message for Update button</comment>
  </data>
  <data name="View_LoanTypesCurd_Insert" xml:space="preserve">
    <value>Insert a Loan Type</value>
    <comment>It's a message for Insert button</comment>
  </data>
  <data name="View_LoanTypesName" xml:space="preserve">
    <value>Loan types</value>
    <comment>It's the name for loan types page</comment>
  </data>
  <data name="View_PaymentFrequenciesCrud_Delete" xml:space="preserve">
    <value>Delete a Payment Frequency</value>
    <comment>It's a message for Delete button</comment>
  </data>
  <data name="View_PaymentFrequenciesCrud_Fetch" xml:space="preserve">
    <value>Fetch Payment Frequency</value>
    <comment>It's a message for Fetch button</comment>
  </data>
  <data name="View_PaymentFrequenciesCrud_Insert" xml:space="preserve">
    <value>Insert a Payment Frequency</value>
    <comment>It's a message for Insert button</comment>
  </data>
  <data name="View_PaymentFrequenciesCrud_Update" xml:space="preserve">
    <value>Update a Payment Frequency</value>
    <comment>It's a message for Update button</comment>
  </data>
  <data name="View_PaymentFrequencyName" xml:space="preserve">
    <value>Payment frequency</value>
    <comment>It's the name for payment frequency page</comment>
  </data>
  <data name="View_Presentation1_Part1" xml:space="preserve">
    <value>The most reliable loan system to run your business, </value>
    <comment>It's the firt part of the presentation message view 1</comment>
  </data>
  <data name="View_Presentation1_Part2" xml:space="preserve">
    <value>FASTER.</value>
    <comment>It's the second part of the presentation message view 1</comment>
  </data>
  <data name="View_Presentation2_Part1" xml:space="preserve">
    <value>SysCredit is built to make it easy to </value>
    <comment>It's the firt part of the presentation message view 2</comment>
  </data>
  <data name="View_Presentation2_Part2" xml:space="preserve">
    <value>ORDER </value>
    <comment>It's the second part of the presentation message view 2</comment>
  </data>
  <data name="View_Presentation2_Part3" xml:space="preserve">
    <value>your loans or collections on a daily basis all in one place.</value>
    <comment>It's the third part of the presentation message view 2</comment>
  </data>
  <data name="View_Presentation3_Part1" xml:space="preserve">
    <value>Fear not! SysCredit gives you total security, it handles everything from a remote center like a total </value>
    <comment>It's the firt part of the presentation message view 3</comment>
  </data>
  <data name="View_Presentation3_Part2" xml:space="preserve">
    <value>LOOKOUT.</value>
    <comment>It's the second part of the presentation message view 3</comment>
  </data>
  <data name="View_Presentation4_Part1" xml:space="preserve">
    <value>SysCredit is </value>
    <comment>It's the firt part of the presentation message view 4</comment>
  </data>
  <data name="View_Presentation4_Part2" xml:space="preserve">
    <value>ACCESSIBILITY </value>
    <comment>It's the second part of the presentation message view 4</comment>
  </data>
  <data name="View_Presentation4_Part3" xml:space="preserve">
    <value>tailor-made for you!</value>
    <comment>It's the third part of the presentation message view 4</comment>
  </data>
  <data name="View_RelationshipName" xml:space="preserve">
    <value>Relationship</value>
    <comment>It's the name for relationship page</comment>
  </data>
  <data name="View_RelationshipsCrud_Delete" xml:space="preserve">
    <value>Delete a Relationship</value>
    <comment>It's a message for Delete button</comment>
  </data>
  <data name="View_RelationshipsCrud_Fetch" xml:space="preserve">
    <value>Fetch Relationship</value>
    <comment>It's a message for Fetch button</comment>
  </data>
  <data name="View_RelationshipsCrud_Insert" xml:space="preserve">
    <value>Insert a Relationship</value>
    <comment>It's a message for Insert button</comment>
  </data>
  <data name="View_RelationshipsCrud_Update" xml:space="preserve">
    <value>Update a Relationship</value>
    <comment>It's a message for Update button</comment>
  </data>
  <data name="View_Select_Message" xml:space="preserve">
    <value>Choose one</value>
    <comment>It's a message for selecte a item</comment>
  </data>
  <data name="View_StartToWork" xml:space="preserve">
    <value>Start to work</value>
    <comment>It's a message for start some process</comment>
  </data>
  <data name="View_Update_Message" xml:space="preserve">
    <value>Update</value>
    <comment>It's  a message for Update pages</comment>
  </data>
  <data name="View_Welcome" xml:space="preserve">
    <value>Welcome to SysCredit</value>
    <comment>It is a welcome message</comment>
  </data>
</root>